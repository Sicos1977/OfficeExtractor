<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenMcdf</name>
    </assembly>
    <members>
        <member name="T:OpenMcdf.CfbBinaryReader">
            <summary>
            Reads CFB data types from a stream.
            </summary>
        </member>
        <member name="T:OpenMcdf.CfbBinaryWriter">
            <summary>
            Writes CFB data types to a stream.
            </summary>
        </member>
        <member name="T:OpenMcdf.CfbStream">
            <summary>
            Represents a stream in a compound file. Provides read, write, seek, and length operations for compound file streams.
            </summary>
        </member>
        <member name="P:OpenMcdf.CfbStream.Parent">
            <summary>
            Gets the parent storage containing this stream.
            </summary>
        </member>
        <member name="P:OpenMcdf.CfbStream.EntryInfo">
            <summary>
            Gets metadata about this stream entry.
            </summary>
        </member>
        <member name="P:OpenMcdf.CfbStream.CanRead">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.CfbStream.CanSeek">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.CfbStream.CanWrite">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.CfbStream.Length">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.CfbStream.Position">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.CfbStream.Flush">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.CfbStream.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.CfbStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.CfbStream.SetLength(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.CfbStream.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.CfbStream.Read(System.Span{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.CfbStream.ReadByte">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.CfbStream.WriteByte(System.Byte)">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.CfbStream.Write(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="T:OpenMcdf.ContextBase">
            <summary>
            Supports switching the <see cref="T:OpenMcdf.RootContext"/> object.
            </summary>
        </member>
        <member name="T:OpenMcdf.DifatSectorEnumerator">
            <summary>
            Enumerates the <see cref="T:OpenMcdf.Sector"/>s in a DIFAT chain.
            </summary>
        </member>
        <member name="M:OpenMcdf.DifatSectorEnumerator.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.DifatSectorEnumerator.Current">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.DifatSectorEnumerator.System#Collections#IEnumerator#Current">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.DifatSectorEnumerator.MoveNext">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.DifatSectorEnumerator.Reset">
            <inheritdoc/>
        </member>
        <member name="T:OpenMcdf.DirectoryEntries">
            <summary>
            Encapsulates getting and adding <see cref="T:OpenMcdf.DirectoryEntry"/> objects."
            </summary>
        </member>
        <member name="M:OpenMcdf.DirectoryEntries.GetDictionaryEntry(System.UInt32)">
            <summary>
            Gets the <see cref="T:OpenMcdf.DirectoryEntry"/> for the specified stream ID.
            </summary>
        </member>
        <member name="T:OpenMcdf.StorageType">
            <summary>
            The storage type of a <see cref="T:OpenMcdf.DirectoryEntry"/>.
            </summary>
        </member>
        <member name="T:OpenMcdf.NodeColor">
            <summary>
            Red-black node color.
            </summary>
        </member>
        <member name="T:OpenMcdf.DirectoryEntry">
            <summary>
            Encapsulates data about a <see cref="T:OpenMcdf.Storage"/> or Stream.
            </summary>
        </member>
        <member name="P:OpenMcdf.DirectoryEntry.Type">
            <summary>
            The type of the storage object.
            </summary>
        </member>
        <member name="P:OpenMcdf.DirectoryEntry.LeftSiblingId">
            <summary>
            Stream ID of the left sibling.
            </summary>
        </member>
        <member name="P:OpenMcdf.DirectoryEntry.RightSiblingId">
            <summary>
            Stream ID of the right sibling.
            </summary>
        </member>
        <member name="P:OpenMcdf.DirectoryEntry.ChildId">
            <summary>
            Stream ID of the child.
            </summary>
        </member>
        <member name="P:OpenMcdf.DirectoryEntry.CLSID">
            <summary>
            GUID for storage objects.
            </summary>
        </member>
        <member name="P:OpenMcdf.DirectoryEntry.StateBits">
            <summary>
            User defined flags for storage objects.
            </summary>
        </member>
        <member name="P:OpenMcdf.DirectoryEntry.CreationTime">
            <summary>
            The creation time of the storage object.
            </summary>
        </member>
        <member name="P:OpenMcdf.DirectoryEntry.ModifiedTime">
            <summary>
            The modified time of the storage object.
            </summary>
        </member>
        <member name="P:OpenMcdf.DirectoryEntry.StartSectorId">
            <summary>
            The starting sector location for a stream or the first sector of the mini-stream for the root storage object.
            </summary>
        </member>
        <member name="P:OpenMcdf.DirectoryEntry.StreamLength">
            <summary>
            The length of the stream.
            </summary>
        </member>
        <member name="T:OpenMcdf.DirectoryEntryComparer">
            <summary>
            Provides a <see cref="T:System.Collections.Generic.IComparer`1"/> for <see cref="T:OpenMcdf.DirectoryEntry"/> objects.
            </summary>
        </member>
        <member name="T:OpenMcdf.DirectoryEntryEnumerator">
            <summary>
            Enumerates <see cref="T:OpenMcdf.DirectoryEntry"/> instances from a <see cref="T:OpenMcdf.DirectoryEntries"/>.
            </summary>
        </member>
        <member name="M:OpenMcdf.DirectoryEntryEnumerator.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.DirectoryEntryEnumerator.Current">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.DirectoryEntryEnumerator.System#Collections#IEnumerator#Current">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.DirectoryEntryEnumerator.MoveNext">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.DirectoryEntryEnumerator.Reset">
            <inheritdoc/>
        </member>
        <member name="T:OpenMcdf.DirectoryTree">
            <summary>
            Encapsulates adding and removing <see cref="T:OpenMcdf.DirectoryEntry"/> objects to a red-black tree.
            </summary>
        </member>
        <member name="T:OpenMcdf.DirectoryTreeEnumerator">
            <summary>
            Enumerates the children of a <see cref="T:OpenMcdf.DirectoryEntry"/>.
            </summary>
        </member>
        <member name="M:OpenMcdf.DirectoryTreeEnumerator.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.DirectoryTreeEnumerator.Current">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.DirectoryTreeEnumerator.System#Collections#IEnumerator#Current">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.DirectoryTreeEnumerator.MoveNext">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.DirectoryTreeEnumerator.Reset">
            <inheritdoc/>
        </member>
        <member name="T:OpenMcdf.EntryInfo">
            <summary>
            Encapsulates information about an entry in a <see cref="T:OpenMcdf.Storage"/>.
            </summary>
        </member>
        <member name="M:OpenMcdf.EntryInfo.#ctor(OpenMcdf.EntryType,System.String,System.String,System.Int64,System.Guid,System.DateTime,System.DateTime)">
            <summary>
            Encapsulates information about an entry in a <see cref="T:OpenMcdf.Storage"/>.
            </summary>
        </member>
        <member name="T:OpenMcdf.Fat">
            <summary>
            Encapsulates getting and setting entries in the FAT.
            </summary>
        </member>
        <member name="M:OpenMcdf.Fat.Add(OpenMcdf.FatEnumerator,System.UInt32)">
            <summary>
            Adds a new entry to the FAT.
            </summary>
            <returns>The index of the new entry in the FAT</returns>
        </member>
        <member name="T:OpenMcdf.FatChainEnumerator">
            <summary>
            Enumerates the <see cref="T:OpenMcdf.Sector"/>s in a FAT sector chain.
            </summary>
        </member>
        <member name="M:OpenMcdf.FatChainEnumerator.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.FatChainEnumerator.Current">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.FatChainEnumerator.System#Collections#IEnumerator#Current">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.FatChainEnumerator.MoveNext">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.FatChainEnumerator.MoveTo(System.UInt32)">
            <summary>
            Moves to the specified index within the FAT sector chain.
            </summary>
            <param name="index"></param>
            <returns>true if the enumerator was successfully advanced to the given index</returns>
        </member>
        <member name="M:OpenMcdf.FatChainEnumerator.Extend">
            <summary>
            Extends the chain by one
            </summary>
            <returns>The ID of the new sector</returns>
        </member>
        <member name="M:OpenMcdf.FatChainEnumerator.Extend(System.UInt32)">
            <summary>
            Returns the ID of the first sector in the chain.
            </summary>
        </member>
        <member name="M:OpenMcdf.FatChainEnumerator.Reset">
            <inheritdoc/>
        </member>
        <member name="T:OpenMcdf.FatEntry">
            <summary>
            Encapsulates an entry in the File Allocation Table (FAT).
            </summary>
        </member>
        <member name="M:OpenMcdf.FatEntry.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Encapsulates an entry in the File Allocation Table (FAT).
            </summary>
        </member>
        <member name="T:OpenMcdf.FatEnumerator">
            <summary>
            Enumerates the <see cref="T:OpenMcdf.FatEntry"/> records in a <see cref="T:OpenMcdf.Fat"/>.
            </summary>
        </member>
        <member name="M:OpenMcdf.FatEnumerator.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.FatEnumerator.Current">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.FatEnumerator.System#Collections#IEnumerator#Current">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.FatEnumerator.MoveNext">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.FatEnumerator.Reset">
            <inheritdoc/>
        </member>
        <member name="T:OpenMcdf.FatSectorEnumerator">
            <summary>
            Enumerates the <see cref="T:OpenMcdf.Sector"/>s of a compound file.
            </summary>
        </member>
        <member name="M:OpenMcdf.FatSectorEnumerator.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.FatSectorEnumerator.Current">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.FatSectorEnumerator.System#Collections#IEnumerator#Current">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.FatSectorEnumerator.MoveNext">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.FatSectorEnumerator.MoveTo(System.UInt32)">
            <summary>
            Moves the enumerator to the specified sector.
            </summary>
        </member>
        <member name="M:OpenMcdf.FatSectorEnumerator.Reset">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.FatSectorEnumerator.Add">
            <summary>
            Extends the FAT by adding a new sector.
            </summary>
            <returns>The ID of the new sector that was added</returns>
        </member>
        <member name="T:OpenMcdf.FatStream">
            <summary>
            Provides a <inheritdoc cref="T:System.IO.Stream"/> for a stream object in a compound file./>
            </summary>
        </member>
        <member name="P:OpenMcdf.FatStream.DirectoryEntry">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.FatStream.CanRead">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.FatStream.CanSeek">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.FatStream.CanWrite">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.FatStream.Length">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.FatStream.Position">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.FatStream.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.FatStream.Flush">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.FatStream.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.FatStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.FatStream.SetLength(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.FatStream.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:OpenMcdf.FileFormatException">
            <summary>
            The exception that is thrown when an compound file data stream contains invalid data.
            </summary>
        </member>
        <member name="T:OpenMcdf.Header">
            <summary>
            The structure at the beginning of a compound file.
            </summary>
        </member>
        <member name="F:OpenMcdf.Header.Signature">
            <summary>
            Identification signature for the compound file structure.
            </summary>
        </member>
        <member name="P:OpenMcdf.Header.CLSID">
            <summary>
            Reserved and unused class ID.
            </summary>
        </member>
        <member name="P:OpenMcdf.Header.MinorVersion">
            <summary>
            Version number for non-breaking changes.
            </summary>
        </member>
        <member name="P:OpenMcdf.Header.MajorVersion">
            <summary>
            Version number for breaking changes.
            </summary>
        </member>
        <member name="P:OpenMcdf.Header.SectorShift">
            <summary>
            Specifies the sector size of the compound file.
            </summary>
        </member>
        <member name="P:OpenMcdf.Header.DirectorySectorCount">
            <summary>
            The number of directory sectors in the compound file (not used in V3).
            </summary>
        </member>
        <member name="P:OpenMcdf.Header.FatSectorCount">
            <summary>
            The number of FAT sectors in the compound file.
            </summary>
        </member>
        <member name="P:OpenMcdf.Header.FirstDirectorySectorId">
            <summary>
            The starting sector ID of the directory stream.
            </summary>
        </member>
        <member name="P:OpenMcdf.Header.TransactionSignature">
            <summary>
            A sequence number that is incremented every time the compound file is saved by an implementation that supports file transactions.
            </summary>
        </member>
        <member name="P:OpenMcdf.Header.FirstMiniFatSectorId">
            <summary>
            This integer field contains the starting sector ID of the mini FAT.
            </summary>
        </member>
        <member name="P:OpenMcdf.Header.MiniFatSectorCount">
            <summary>
            The number of sectors in the mini FAT.
            </summary>
        </member>
        <member name="P:OpenMcdf.Header.FirstDifatSectorId">
            <summary>
            The starting sector ID of the DIFAT.
            </summary>
        </member>
        <member name="P:OpenMcdf.Header.DifatSectorCount">
            <summary>
            The number of DIFAT sectors in the compound file.
            </summary>
        </member>
        <member name="P:OpenMcdf.Header.Difat">
            <summary>
            An array of the first FAT sector IDs.
            </summary>
        </member>
        <member name="T:OpenMcdf.MiniFat">
            <summary>
            Encapsulates getting and setting <see cref="T:OpenMcdf.FatEntry"/> records in the mini FAT.
            </summary>
        </member>
        <member name="T:OpenMcdf.MiniFatChainEnumerator">
            <summary>
            Enumerates the <see cref="T:OpenMcdf.MiniSector"/>s in a Mini FAT chain.
            </summary>
        </member>
        <member name="M:OpenMcdf.MiniFatChainEnumerator.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.MiniFatChainEnumerator.CurrentSector">
            <summary>
            The index within the Mini FAT sector chain, or <see cref="F:System.UInt32.MaxValue"/> if the enumeration has not started.
            </summary>
        </member>
        <member name="P:OpenMcdf.MiniFatChainEnumerator.Current">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.MiniFatChainEnumerator.System#Collections#IEnumerator#Current">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.MiniFatChainEnumerator.MoveNext">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.MiniFatChainEnumerator.MoveTo(System.UInt32)">
            <summary>
            Moves to the specified index within the mini FAT sector chain.
            </summary>
            <param name="index"></param>
            <returns>true if the enumerator was successfully advanced to the given index</returns>
        </member>
        <member name="M:OpenMcdf.MiniFatChainEnumerator.Reset">
            <inheritdoc/>
        </member>
        <member name="T:OpenMcdf.MiniFatEnumerator">
            <summary>
            Enumerates the <see cref="T:OpenMcdf.MiniSector"/>s from the FAT chain for the mini FAT.
            </summary>
        </member>
        <member name="M:OpenMcdf.MiniFatEnumerator.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.MiniFatEnumerator.Current">
            <inheritdoc/>
        </member>
        <member name="P:OpenMcdf.MiniFatEnumerator.System#Collections#IEnumerator#Current">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.MiniFatEnumerator.MoveNext">
            <inheritdoc/>
        </member>
        <member name="M:OpenMcdf.MiniFatEnumerator.Reset">
            <inheritdoc/>
        </member>
        <member name="T:OpenMcdf.MiniFatStream">
            <summary>
            Provides a <see cref="T:System.IO.Stream"/> for reading a <see cref="P:OpenMcdf.MiniFatStream.DirectoryEntry"/> from the mini FAT stream.
            </summary>
        </member>
        <member name="T:OpenMcdf.MiniSector">
            <summary>
            Encapsulates information about a mini sector in a compound file.
            </summary>
            <param name="Id">The ID of the mini sector</param>
            <param name="Length">The sector length</param>
        </member>
        <member name="M:OpenMcdf.MiniSector.#ctor(System.UInt32,System.Int32)">
            <summary>
            Encapsulates information about a mini sector in a compound file.
            </summary>
            <param name="Id">The ID of the mini sector</param>
            <param name="Length">The sector length</param>
        </member>
        <member name="P:OpenMcdf.MiniSector.Id">
            <summary>The ID of the mini sector</summary>
        </member>
        <member name="P:OpenMcdf.MiniSector.Length">
            <summary>The sector length</summary>
        </member>
        <member name="P:OpenMcdf.MiniSector.Position">
            <summary>
            The position of the mini sector in the mini FAT stream.
            </summary>
        </member>
        <member name="P:OpenMcdf.MiniSector.EndPosition">
            <summary>
            The end position of the mini sector in the mini FAT stream.
            </summary>
        </member>
        <member name="T:OpenMcdf.RootContext">
            <summary>
            Encapsulates the objects required to read and write data to and from a compound file.
            </summary>
        </member>
        <member name="P:OpenMcdf.RootContext.SectorSize">
            <summary>
            The size of a regular sector.
            </summary>
        </member>
        <member name="T:OpenMcdf.RootContextSite">
            <summary>
            A site for the <see cref="T:OpenMcdf.RootContext"/> object, to allow switching streams.
            </summary>
        </member>
        <member name="T:OpenMcdf.Version">
            <summary>
            Represents the major version of the compound file.
            </summary>
        </member>
        <member name="F:OpenMcdf.Version.V3">
            <summary>
            512 byte sectors.
            </summary>
        </member>
        <member name="F:OpenMcdf.Version.V4">
            <summary>
            4096 byte sectors.
            </summary>
        </member>
        <member name="T:OpenMcdf.StorageModeFlags">
            <summary>
            Specifies options for configuring the behavior of a compound file root storage.
            </summary>
        </member>
        <member name="F:OpenMcdf.StorageModeFlags.None">
            <summary>
            Default mode with no special flags set.
            </summary>
        </member>
        <member name="F:OpenMcdf.StorageModeFlags.LeaveOpen">
            <summary>
            Leaves the underlying stream open after the <see cref="T:OpenMcdf.RootStorage"/> is disposed.
            </summary>
        </member>
        <member name="F:OpenMcdf.StorageModeFlags.Transacted">
            <summary>
            Allows the compound file to be used in a transacted context, enabling rollback of changes.
            </summary>
        </member>
        <member name="T:OpenMcdf.RootStorage">
            <summary>
            Encapsulates the root <see cref="T:OpenMcdf.Storage"/> of a compound file. Provides methods to create, open, commit, revert, and consolidate compound files.
            </summary>
        </member>
        <member name="M:OpenMcdf.RootStorage.Create(System.String,OpenMcdf.Version,OpenMcdf.StorageModeFlags)">
            <summary>
            Creates a new compound file at the specified file path.
            </summary>
            <param name="fileName">The file path to create the compound file.</param>
            <param name="version">The compound file version.</param>
            <param name="flags">Flags controlling storage behavior.</param>
            <returns>A new <see cref="T:OpenMcdf.RootStorage"/> instance.</returns>
        </member>
        <member name="M:OpenMcdf.RootStorage.Create(System.IO.Stream,OpenMcdf.Version,OpenMcdf.StorageModeFlags)">
            <summary>
            Creates a new compound file in the specified stream.
            </summary>
            <param name="stream">The stream to use for the compound file.</param>
            <param name="version">The compound file version.</param>
            <param name="flags">Flags controlling storage behavior.</param>
            <returns>A new <see cref="T:OpenMcdf.RootStorage"/> instance.</returns>
        </member>
        <member name="M:OpenMcdf.RootStorage.CreateInMemory(OpenMcdf.Version,OpenMcdf.StorageModeFlags)">
            <summary>
            Creates a new in-memory compound file.
            </summary>
            <param name="version">The compound file version.</param>
            <param name="flags">Flags controlling storage behavior.</param>
            <returns>A new <see cref="T:OpenMcdf.RootStorage"/> instance.</returns>
        </member>
        <member name="M:OpenMcdf.RootStorage.Open(System.String,System.IO.FileMode,OpenMcdf.StorageModeFlags)">
            <summary>
            Opens an existing compound file from the specified file path.
            </summary>
            <param name="fileName">The file path to open.</param>
            <param name="mode">The file mode to use.</param>
            <param name="flags">Flags controlling storage behavior.</param>
            <returns>An opened <see cref="T:OpenMcdf.RootStorage"/> instance.</returns>
        </member>
        <member name="M:OpenMcdf.RootStorage.Open(System.String,System.IO.FileMode,System.IO.FileAccess,OpenMcdf.StorageModeFlags)">
            <summary>
            Opens an existing compound file from the specified file path with access control.
            </summary>
            <param name="fileName">The file path to open.</param>
            <param name="mode">The file mode to use.</param>
            <param name="access">The file access mode.</param>
            <param name="flags">Flags controlling storage behavior.</param>
            <returns>An opened <see cref="T:OpenMcdf.RootStorage"/> instance.</returns>
        </member>
        <member name="M:OpenMcdf.RootStorage.Open(System.IO.Stream,OpenMcdf.StorageModeFlags)">
            <summary>
            Opens an existing compound file from the specified stream.
            </summary>
            <param name="stream">The stream to open.</param>
            <param name="flags">Flags controlling storage behavior.</param>
            <returns>An opened <see cref="T:OpenMcdf.RootStorage"/> instance.</returns>
        </member>
        <member name="M:OpenMcdf.RootStorage.OpenRead(System.String,OpenMcdf.StorageModeFlags)">
            <summary>
            Opens an existing compound file for read-only access.
            </summary>
            <param name="fileName">The file path to open.</param>
            <param name="flags">Flags controlling storage behavior.</param>
            <returns>An opened <see cref="T:OpenMcdf.RootStorage"/> instance.</returns>
        </member>
        <member name="M:OpenMcdf.RootStorage.Dispose">
            <summary>
            Disposes the current context of the compound file.
            </summary>
        </member>
        <member name="P:OpenMcdf.RootStorage.BaseStream">
            <summary>
            Gets the underlying stream for this compound file.
            </summary>
        </member>
        <member name="M:OpenMcdf.RootStorage.Flush(System.Boolean)">
            <summary>
            Flushes changes to the underlying stream. Optionally consolidates the file.
            </summary>
            <param name="consolidate">If true, consolidates the file after flushing.</param>
        </member>
        <member name="M:OpenMcdf.RootStorage.Commit">
            <summary>
            Commits all changes to the compound file.
            </summary>
        </member>
        <member name="M:OpenMcdf.RootStorage.Revert">
            <summary>
            Reverts all uncommitted changes to the compound file.
            </summary>
        </member>
        <member name="M:OpenMcdf.RootStorage.SwitchTo(System.IO.Stream)">
            <summary>
            Switches the underlying storage to a new stream.
            </summary>
            <param name="stream">The new stream to use.</param>
        </member>
        <member name="M:OpenMcdf.RootStorage.SwitchTo(System.String)">
            <summary>
            Switches the underlying storage to a new file.
            </summary>
            <param name="fileName">The new file to use.</param>
        </member>
        <member name="T:OpenMcdf.Sector">
            <summary>
            Encapsulates information about a sector in a compound file.
            </summary>
            <param name="Id">The sector ID</param>
            <param name="Length">The sector length</param>
        </member>
        <member name="M:OpenMcdf.Sector.#ctor(System.UInt32,System.Int32)">
            <summary>
            Encapsulates information about a sector in a compound file.
            </summary>
            <param name="Id">The sector ID</param>
            <param name="Length">The sector length</param>
        </member>
        <member name="P:OpenMcdf.Sector.Id">
            <summary>The sector ID</summary>
        </member>
        <member name="P:OpenMcdf.Sector.Length">
            <summary>The sector length</summary>
        </member>
        <member name="P:OpenMcdf.Sector.Position">
            <summary>
            The position of the sector in the compound file stream.
            </summary>
        </member>
        <member name="P:OpenMcdf.Sector.EndPosition">
            <summary>
            The end position of the sector in the compound file stream.
            </summary>
        </member>
        <member name="T:OpenMcdf.SectorDataCache">
            <summary>
            Caches data for adding new sectors to the FAT.
            </summary>
        </member>
        <member name="T:OpenMcdf.SectorType">
            <summary>
            Defines the types of sectors in a compound file.
            </summary>
        </member>
        <member name="T:OpenMcdf.Storage">
            <summary>
            An object in a compound file that is analogous to a file system directory. Provides methods to create, open, enumerate, and delete entries, as well as to manage metadata.
            </summary>
        </member>
        <member name="P:OpenMcdf.Storage.EntryInfo">
            <summary>
            Gets metadata about this storage entry.
            </summary>
        </member>
        <member name="P:OpenMcdf.Storage.CreationTime">
            <summary>
            Gets or sets the creation time for this storage.
            </summary>
        </member>
        <member name="P:OpenMcdf.Storage.ModifiedTime">
            <summary>
            Gets or sets the last modified time for this storage.
            </summary>
        </member>
        <member name="P:OpenMcdf.Storage.StateBits">
            <summary>
            Gets or sets the state bits for this storage.
            </summary>
        </member>
        <member name="M:OpenMcdf.Storage.EnumerateEntries">
            <summary>
            Enumerates all entries (storages and streams) contained in this storage.
            </summary>
            <returns>An enumerable of <see cref="P:OpenMcdf.Storage.EntryInfo"/> objects.</returns>
        </member>
        <member name="M:OpenMcdf.Storage.ContainsEntry(System.String)">
            <summary>
            Determines whether an entry with the specified name exists in this storage.
            </summary>
            <param name="name">The entry name.</param>
            <returns>True if the entry exists; otherwise, false.</returns>
        </member>
        <member name="M:OpenMcdf.Storage.TryGetEntryInfo(System.String,OpenMcdf.EntryInfo@)">
            <summary>
            Attempts to get metadata for an entry by name.
            </summary>
            <param name="name">The entry name.</param>
            <param name="entryInfo">The entry info if found.</param>
            <returns>True if found; otherwise, false.</returns>
        </member>
        <member name="M:OpenMcdf.Storage.CreateStorage(System.String)">
            <summary>
            Creates a new storage entry with the specified name.
            </summary>
            <param name="name">The name of the new storage.</param>
            <returns>The created <see cref="T:OpenMcdf.Storage"/>.</returns>
        </member>
        <member name="M:OpenMcdf.Storage.CreateStream(System.String)">
            <summary>
            Creates a new stream entry with the specified name.
            </summary>
            <param name="name">The name of the new stream.</param>
            <returns>The created <see cref="T:OpenMcdf.CfbStream"/>.</returns>
        </member>
        <member name="M:OpenMcdf.Storage.OpenStorage(System.String)">
            <summary>
            Opens an existing storage entry by name.
            </summary>
            <param name="name">The name of the storage to open.</param>
            <returns>The opened <see cref="T:OpenMcdf.Storage"/>.</returns>
        </member>
        <member name="M:OpenMcdf.Storage.TryOpenStorage(System.String,OpenMcdf.Storage@)">
            <summary>
            Attempts to open a storage entry by name.
            </summary>
            <param name="name">The name of the storage.</param>
            <param name="storage">The opened storage if found.</param>
            <returns>True if found; otherwise, false.</returns>
        </member>
        <member name="M:OpenMcdf.Storage.OpenStream(System.String)">
            <summary>
            Opens an existing stream entry by name.
            </summary>
            <param name="name">The name of the stream to open.</param>
            <returns>The opened <see cref="T:OpenMcdf.CfbStream"/>.</returns>
        </member>
        <member name="M:OpenMcdf.Storage.TryOpenStream(System.String,OpenMcdf.CfbStream@)">
            <summary>
            Attempts to open a stream entry by name.
            </summary>
            <param name="name">The name of the stream.</param>
            <param name="stream">The opened stream if found.</param>
            <returns>True if found; otherwise, false.</returns>
        </member>
        <member name="M:OpenMcdf.Storage.CopyTo(OpenMcdf.Storage)">
            <summary>
            Copies all entries from this storage to the specified destination storage.
            </summary>
            <param name="destination">The destination storage.</param>
        </member>
        <member name="M:OpenMcdf.Storage.Delete(System.String)">
            <summary>
            Deletes the entry with the specified name from this storage.
            </summary>
            <param name="name">The name of the entry to delete.</param>
        </member>
        <member name="T:OpenMcdf.StreamExtensions">
            <summary>
            Adds modern extension methods to the <see cref="T:System.IO.Stream"/> class for netstandard2.0.
            </summary>
        </member>
        <member name="T:OpenMcdf.StreamId">
            <summary>
            Stream ID constants for <see cref="T:OpenMcdf.DirectoryEntry"/>.
            </summary>
        </member>
        <member name="T:OpenMcdf.ThrowHelper">
            <summary>
            Extensions to consistently throw exceptions.
            </summary>
        </member>
        <member name="T:OpenMcdf.TransactedStream">
            <summary>
            Stores modifications to a CFB stream that can be committed or reverted.
            </summary>
        </member>
    </members>
</doc>
